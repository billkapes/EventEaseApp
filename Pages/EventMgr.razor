@page "/eventmgr"
@using EventEaseApp.Models
@using EventEaseApp.Services
@inject EventService EventService

<h3>Event Manager</h3>

<div class="mb-3">
    <input placeholder="Event Name" @bind="newEvent.Name" class="form-control mb-1" />
    <input placeholder="Description" @bind="newEvent.Description" class="form-control mb-1" />
    <input type="date" @bind="newEvent.Date" class="form-control mb-1" />
    <input placeholder="Location" @bind="newEvent.Location" class="form-control mb-1" />
    <button class="btn btn-primary" @onclick="AddEvent">Add Event</button>
</div>

@if (events.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Date</th>
                <th>Location</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ev in events)
            {
                <tr>
                    <td>@ev.Name</td>
                    <td>@ev.Description</td>
                    <td>@ev.Date.ToShortDateString()</td>
                    <td>@ev.Location</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteEvent(ev)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No events found.</p>
}

@code {
    private List<Event> events = new();
    private Event newEvent = new() { Date = DateTime.Today };

    protected override void OnInitialized()
    {
        events = EventService.GetEvents().ToList();
    }

    private void AddEvent()
    {
        EventService.AddEvent(newEvent);
        events = EventService.GetEvents().ToList();
        newEvent = new Event { Date = DateTime.Today };
    }

    private void DeleteEvent(Event ev)
    {
        EventService.DeleteEvent(ev);
        events = EventService.GetEvents().ToList();
    }
}
